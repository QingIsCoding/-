/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
//深度优先搜索
class Solution
{
public:
    //后序遍历
    int sumOfLeftLeaves(TreeNode* root)
    {
        if(root == nullptr) return 0;

        //可以没有，但会多遍历一层到左儿子(空节点)和右儿子(空节点)再返回0+0
        if(root->left == nullptr && root->right == nullptr) return 0;

        int leftValue = sumOfLeftLeaves(root->left);
        if(root->left != nullptr && root->left->left == nullptr && root->left->right == nullptr) leftValue = root->left->val;

        int rightValue = sumOfLeftLeaves(root->right);

        return leftValue + rightValue;
    }
};