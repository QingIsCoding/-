/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
//递归
class Solution
{
public:
    bool traversal(TreeNode* cur, int count)
    {
        if(cur->left == nullptr && cur->right == nullptr && count == 0) return true;

        //if(cur->left == nullptr && cur->right == nullptr && count == 0) return false;
        if(cur->left == nullptr && cur->right == nullptr) return false;

        if(cur->left != nullptr)
        {
            count -= cur->left->val;
            
            if(traversal(cur->left, count)) return true;
            
            count += cur->left->val;
        }

        if(cur->right != nullptr)
        {
            count -= cur->right->val;
            
            if(traversal(cur->right, count)) return true;
            
            count += cur->right->val;
        }

        return false;
    }

    bool hasPathSum(TreeNode* root, int targetSum)
    {
        if(root == nullptr) return false;

        return traversal(root, targetSum - root->val);
    }
};