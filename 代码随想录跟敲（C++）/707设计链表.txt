//单向链表
class MyLinkedList 
{
public:
    struct ListNode
    {
        int val;
        ListNode *next;
        ListNode(int val) : val(val), next(nullptr){}
    };

    MyLinkedList() 
    {
        dummyHead = new ListNode(0);
        size = 0;
    }
    
    int get(int index) 
    {
        if(index < 0 || index > size - 1) return -1;
        ListNode *cur = dummyHead->next;
        while(index--) cur = cur->next;
        return cur->val;
    }
    
    void addAtHead(int val) 
    {
        ListNode *newNode = new ListNode(val);
        newNode->next = dummyHead->next;
        dummyHead->next = newNode;
        size++;
    }
    
    void addAtTail(int val) 
    {
        ListNode *newNode = new ListNode(val);
        ListNode *cur = dummyHead;
        //布尔类型用!var，指针用var==nullptr，整型用var==0
        //不管是c的NULL还是c++的nullptr，都是不建议把指针当成数字
        //while(!(cur->next)) cur = cur->next; ×
        while(cur->next != nullptr) cur = cur->next;
        cur->next = newNode;
        size++;
    }
    
    void addAtIndex(int index, int val) 
    {
        if(index > size) return;
        if(index < 0) index = 0;
        ListNode *newNode = new ListNode(val);
        ListNode *cur = dummyHead;
        while(index--) cur = cur->next;
        newNode->next = cur->next;
        cur->next = newNode;
        size++;
    }
    
    void deleteAtIndex(int index) 
    {
        if(index < 0 || index >= size) return;
        ListNode *cur = dummyHead;
        while(index--) cur = cur->next;
        ListNode *tmp = cur->next;
        cur->next = cur->next->next;
        delete tmp;
        tmp = nullptr;
        size--;
    }

private:
    int size;
    ListNode *dummyHead;
};

/**
 * Your MyLinkedList object will be instantiated and called as such:
 * MyLinkedList* obj = new MyLinkedList();
 * int param_1 = obj->get(index);
 * obj->addAtHead(val);
 * obj->addAtTail(val);
 * obj->addAtIndex(index,val);
 * obj->deleteAtIndex(index);
 */