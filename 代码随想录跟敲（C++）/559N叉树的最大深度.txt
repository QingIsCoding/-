/*
// Definition for a Node.
class Node {
public:
    int val;
    vector<Node*> children;

    Node() {}

    Node(int _val) {
        val = _val;
    }

    Node(int _val, vector<Node*> _children) {
        val = _val;
        children = _children;
    }
};
*/
//广度优先搜索
class Solution
{
public:
    int maxDepth(Node* root)
    {
        int res = 0;

        if(root == nullptr) return res;
        
        queue<Node*> que;
        que.push(root);

        while(!que.empty())
        {
            int currentLevelSize = que.size();

            for(int i = 0; i < currentLevelSize; ++i)
            {
                Node* node = que.front();
                que.pop();

                for(int j = 0; j < node->children.size(); ++j)
                    if(node->children[j]) que.push(node->children[j]);
            }

            res += 1;
        }

        return res;        
    }
};

 