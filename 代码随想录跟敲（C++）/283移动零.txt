//双指针
class Solution 
{
public:
    void moveZeroes(vector<int>& nums) 
    {
        int n = nums.size(), left = 0, right = 0;

        while(right < n)
        {
            //left指向当前已经处理好的序列的尾部的下一个
            //right指向待处理序列的头部
            if(nums[right])
            {
                swap(nums[left], nums[right]);
                left++;
            }
            right++;
        } 
    }
};
/*
0   1   0   3   12
lr
0   1   0   3   12
l   r         	
1   0   0   3   12
l   r    
1   0   0   3   12
    l   r
1   0   0   3   12
    l       r
1   3   0   0   12
    l       r
1   3   0   0   12
        l       r
1   3   12  0   0
        l       r
1   3   12  0   0
            l       r
*/
/*
1   6   0   7   9   0   0   4   3
lr
1   6   0   7   9   0   0   4   3
    lr
1   6   0   7   9   0   0   4   3
        lr             
1   6   0   7   9   0   0   4   3
        l   r
1   6   7   0   9   0   0   4   3
        l   r
1   6   7   0   9   0   0   4   3
            l   r
1   6   7   9   0   0   0   4   3
            l   r
1   6   7   9   0   0   0   4   3
                l   r
1   6   7   9   0   0   0   4   3
                l       r
1   6   7   9   0   0   0   4   3
                l           r
1   6   7   9   4   0   0   0   3
                l           r
1   6   7   9   4   0   0   0   3
                    l           r
1   6   7   9   4   3   0   0   0
                    l           r
1   6   7   9   4   3   0   0   0
                        l           r
*/