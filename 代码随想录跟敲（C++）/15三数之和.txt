//排序 + 双指针
class Solution 
{
public:
    vector<vector<int>> threeSum(vector<int>& nums) 
    {
        vector<vector<int>> result;
        sort(nums.begin(), nums.end());

        for(int i = 0; i < nums.size(); ++i)
        {
            if(nums[i] > 0) return result;

            //i > 0防止nums[i - 1]出现不存在的nums[-1]
            //i指针枚举的数和上一次枚举的数相同，直接跳到下一个数
            //不能用nums[i] == nums[i + 1]，否则会跳过正确结果
            if(i > 0 && nums[i] == nums[i - 1]) continue;

            int left = i + 1;
            int right = nums.size() - 1;

            while(left < right)
            {
                if(nums[i] + nums[left] +nums[right] > 0) --right;
                else if(nums[i] + nums[left] +nums[right] < 0) ++left;
                else
                {
                    result.push_back(vector<int>{nums[i], nums[left], nums[right]});

                    while(left < right && nums[right] == nums[right - 1]) --right;
                    while(left < right && nums[left] == nums[left + 1]) ++left;

                    --right;
                    ++left;
                }
            }  
        }    
            
        return result;
    }
};