/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
//广度优先搜索
class Solution
{
public:
    vector<double> averageOfLevels(TreeNode* root)
    {
        vector<double> res;

        if(root == nullptr) return res;

        queue<TreeNode*> que;
        que.push(root);

        while(!que.empty())
        {
            int currentLevelSize = que.size();
            double sum = 0;

            for(int i = 0; i < currentLevelSize; ++i)
            {
                TreeNode* node = que.front();
                que.pop();
                sum += node->val;

                if(node->left != nullptr) que.push(node->left);
                if(node->right != nullptr) que.push(node->right);
            }

            res.push_back(sum / currentLevelSize);
        }

        return res;
    }
};