/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
//深度优先搜索
class Solution
{
public:
    bool isSameTree(TreeNode* p, TreeNode* q)
    {
        //左节点为空，右节点为空
        if(p == nullptr && q == nullptr) return true;
        //左节点为空，右节点不为空
        else if(p == nullptr && q != nullptr) return false;
        //左节点不为空，右节点为空
        else if(p != nullptr && q == nullptr) return false;
        //左节点不为空，右节点不为空，但两节点的值不相等
        else if(p->val != q->val) return false;
        //左节点不为空，右节点不为空，两节点的值相等，继续判断
        bool left = isSameTree(p->left, q->left);
        bool right = isSameTree(p->right, q->right);

        return left && right;
    }
};