//动态规划
class Solution 
{
public:
    bool wordBreak(string s, vector<string>& wordDict) 
    {
        unordered_set<string> wordSet(wordDict.begin(), wordDict.end());
        vector<bool> dp(s.size() + 1, false);
        dp[0] = true;

        for(int j = 1; j <= s.size(); ++j)
            for(int i = 0; i < j; ++i)
            {
                string word = s.substr(i, j - i);
                if(dp[i] && wordSet.find(word) != wordSet.end()) dp[j] = true;
            }

        return dp[s.size()];  
    }
};