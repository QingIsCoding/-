//单调队列
class Solution 
{
public:
    void pop(int value)
    {
        if(value == deq.front()) deq.pop_front();
    }

    void push(int value)
    {
        while(!deq.empty() && value > deq.back()) deq.pop_back();
        deq.push_back(value);
    }

    int front()
    {
        return deq.front();
    }

    vector<int> maxSlidingWindow(vector<int>& nums, int k) 
    {
        vector<int> result;

        for(int i = 0; i < k; ++i) push(nums[i]);
        
        result.push_back(deq.front());

        for(int i = k; i < nums.size(); ++i)
        {
            pop(nums[i - k]);
            push(nums[i]);
            result.push_back(deq.front());
        }

        return result;
    }

private:
    deque<int> deq;
};