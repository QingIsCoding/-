//两次遍历
class Solution
{
public:
    int candy(vector<int>& ratings)
    {
        vector<int> candyVec(ratings.size(), 1);

        //1.当前孩子比左边孩子评分高
        //比左边高，从左边开始遍历(要用到之前比较的结果)
        for(int i = 1; i <= ratings.size() - 1; ++i)
            if(ratings[i] > ratings[i - 1]) candyVec[i] = candyVec[i - 1] + 1;
        
        //2.当前孩子比右边孩子评分高 且 当前孩子比左边孩子评分高
        //比右边高，从右边开始遍历(要用到之前比较的结果)
        //在比较情况2.时，还要考虑情况1.，取两者的最大值
        for(int i = ratings.size() - 2; i >= 0; --i)
            if(ratings[i] > ratings[i + 1]) candyVec[i] = max(candyVec[i], candyVec[i + 1] + 1);
        
        int res = 0;

        for(int i = 0; i < ratings.size(); ++i) res += candyVec[i];

        return res;
    }
};