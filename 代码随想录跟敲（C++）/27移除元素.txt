//双指针
/*
class Solution 
{
public:
    int removeElement(vector<int>& nums, int val) 
    {
        int slow = 0;

        for(int fast = 0; fast < nums.size(); ++fast)
            if(nums[fast] != val) nums[slow++] = nums[fast];

        return slow;
    }
};
*/
//双指针优化
class Solution 
{
public:
    int removeElement(vector<int>& nums, int val) 
    {
        int fast = 0, slow = nums.size() - 1;

        while(fast <= slow)
            //避免了需要保留的元素的重复赋值操作
            if(nums[fast] == val) nums[fast] = nums[slow--];
            else ++fast;
       
        return fast;
    }
};