class Solution
{
public:
    void backtrackint(const string&digits, int index)
    {
        if(digits.size() == index)
        {
            res.push_back(s);

            return;
        }

        int digit = digits[index] - '0';
        string letter = letterMap[digit];

        for(int i = 0; i < letter.size(); ++i)
        {
            s.push_back(letter[i]);
            backtrackint(digits, index + 1);
            s.pop_back();
        }
    }

    vector<string> letterCombinations(string digits)
    {
        if(digits.size() == 0) return res;

        backtrackint(digits, 0);

        return res;
    }

private:
    vector<string> res;
    string s;
    const string letterMap[10] =
    {
        "",
        "",
        "abc",
        "def",
        "ghi",
        "jkl",
        "mno",
        "pqrs",
        "tuv",
        "wxyz"
    };
};