/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution
{
public:
    void traversal(TreeNode* cur)
    {
        if(cur == nullptr) return;

        traversal(cur->left);

        if(pre == nullptr) count = 1;
        else if(cur->val == pre->val) ++count;
        else count = 1;

            
        if(count == maxCount) res.push_back(cur->val);
        else if(count > maxCount)
        {
            maxCount = count;
            res.clear();
            res.push_back(cur->val);
        }

        pre = cur;
        traversal(cur->right);

        return;
    }

    vector<int> findMode(TreeNode* root)
    {
        traversal(root);

        return res;
    }

private:
    vector<int> res;
    TreeNode* pre;
    int count, maxCount;
};