class Solution
{
public:
    bool isSubsequence(string s, string t)
    {
        int ssz = s.size(), tsz = t.size();
        //dp[i][j]:s[i-1]为结尾与以t[j-1]为结尾的最长重复子数组
        vector<vector<int>> dp(ssz + 1, vector<int>(tsz + 1));

        for(int i = 1; i <= ssz; ++i)
            for(int j = 1; j <= tsz; ++j)
                if(s[i - 1] == t[j - 1]) dp[i][j] = dp[i - 1][j - 1] + 1;
                else dp[i][j] = max(dp[i][j - 1], dp[i - 1][j]);
        
        return dp[ssz][tsz] == ssz;
    }
};