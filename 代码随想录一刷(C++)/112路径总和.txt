/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution
{
public:
    bool traversal(TreeNode* node, int count)
    {
        if(node->left == nullptr && node->right == nullptr && count == 0) return true;

        if(node->left == nullptr && node->right == nullptr) return false;

        if(node->left != nullptr)
            if(traversal(node->left, count - node->left->val)) return true;
        
        if(node->right != nullptr)
            if(traversal(node->right, count - node->right->val)) return true;

        return false;
    }

    bool hasPathSum(TreeNode* root, int targetSum)
    {
        if(root == nullptr) return false;

        return traversal(root, targetSum - root->val);
    }
};