/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution
{
public:
    int maxDepth(TreeNode* root)
    {
        int res = 0;

        if(root == nullptr) return res;

        deque<TreeNode*> deq;
        deq.push_back(root);

        while(!deq.empty())
        {
            int currentLevelSize = deq.size();

            for(int i = 0; i < currentLevelSize; ++i)
            {
                TreeNode* node = deq.front();
                deq.pop_front();

                if(i == currentLevelSize - 1) res += 1;

                if(node->left != nullptr) deq.push_back(node->left);

                if(node->right != nullptr) deq.push_back(node->right);
            }
        }

        return res;
    }
};