/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution
{
public:
    int countNodes(TreeNode* root)
    {
        int res = 0;

        if(root == nullptr) return res;

        TreeNode* left = root->left;
        TreeNode* right = root->right;
        int left_count = 0;
        int right_count = 0;

        while(left != nullptr)
        {
            left = left->left;
            left_count += 1;
        }

        while(right != nullptr)
        {
            right = right->right;
            right_count += 1;
        }

        if(left_count == right_count) res = 2 >> (left_count + 1) + 1;

        return countNodes(root->left) + countNodes(root->right) + 1;
    }
};