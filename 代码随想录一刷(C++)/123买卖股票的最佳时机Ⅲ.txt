class Solution
{
public:
    int maxProfit(vector<int>& prices)
    {
        //0:不操作
        //1:第一次持有
        //2:第一次不持有
        //3:第二次持有
        //4:第二次不持有
        int sz = prices.size();
        vector<vector<int>> dp(sz, vector<int>(5));
        dp[0][1] = 0 - prices[0];
        dp[0][3] = 0 - prices[0];

        for(int i = 1; i < sz; ++i)
        {
            dp[i][0] = dp[i - 1][0];
            dp[i][1] = max(dp[i - 1][1], dp[i - 1][0] - prices[i]);
            dp[i][2] = max(dp[i - 1][2], dp[i - 1][1] + prices[i]);
            dp[i][3] = max(dp[i - 1][3], dp[i - 1][2] - prices[i]);
            dp[i][4] = max(dp[i - 1][4], dp[i - 1][3] + prices[i]);
        }

        return  dp[sz - 1][4];
    }
};