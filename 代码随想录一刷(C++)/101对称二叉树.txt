/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution
{
public:
    bool check(TreeNode* left, TreeNode* right)
    {
        if(left == nullptr && right == nullptr) return true;

        if(left != nullptr && right == nullptr) return false;

        if(left == nullptr && right != nullptr) return false;

        if(left->val != right->val) return false;

        bool outside = check(left->left, right->right);
        bool inside = check(left->right, right->left);

        return outside && inside;
    }

    bool isSymmetric(TreeNode* root)
    {
        return check(root, root);
    }
};