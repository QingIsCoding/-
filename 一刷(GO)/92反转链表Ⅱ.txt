/**
 * Definition for singly-linked list.
 * type ListNode struct {
 *     Val int
 *     Next *ListNode
 * }
 */
func reverseBetween(head *ListNode, left int, right int) *ListNode {
    dummyHead := &ListNode{}
    dummyHead.Next = head
    pre := dummyHead
    for i := 0; i < left - 1; i++ {
        pre = pre.Next
    }
    cur := pre.Next
    for i := 0; i < right - left; i++ {
        next := cur.Next
        //pre->cur->next->next.Next(更改前)
        // 1 -> 2 -> 3  -> 4
        //pre->next->cur->next.Next(更改后)
        // 1 -> 3 -> 2  -> 4
        cur.Next = next.Next
        next.Next = pre.Next
        pre.Next = next
    }
    return dummyHead.Next
}