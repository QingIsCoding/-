/**
 * Definition for a binary tree node.
 * type TreeNode struct {
 *     Val int
 *     Left *TreeNode
 *     Right *TreeNode
 * }
 */
func averageOfLevels(root *TreeNode) []float64 {
    ans := make([]float64, 0)
    if root == nil {
        return ans
    }
    queue := []*TreeNode{root}
    for len(queue) != 0 {
        currentLevelSize := len(queue)
        layerSum := 0
        for i := 0; i < currentLevelSize; i++ {
            node := queue[0]
            queue = queue[1:]
            layerSum += node.Val
            if node.Left != nil {
                queue = append(queue, node.Left)
            }
            if node.Right != nil {
                queue = append(queue, node.Right)
            }
        }
        ans = append(ans, float64(layerSum) / float64(currentLevelSize))
    }
    return ans
}