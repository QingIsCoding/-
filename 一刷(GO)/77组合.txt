func combine(n int, k int) [][]int {
	var ans [][]int
	var path []int
	var backtracking func(n, k, startIndex int)
	backtracking = func(n, k, startIndex int) {
		if len(path) == k {
			temp := make([]int, k)
			copy(temp, path)
			ans = append(ans, temp)
			return
		}
		for i := startIndex; n-i+1 >= k-len(path); i++ {
			path = append(path, i)
			backtracking(n, k, i+1)
			path = path[:len(path)-1]
		}
	}
    backtracking(n, k, 1)
    return ans
}