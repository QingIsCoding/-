func fourSum(nums []int, target int) [][]int {
	sort.Ints(nums)
	sz := len(nums)
	ans := make([][]int, 0)
	for a := 0; a < sz; a++ {
        if nums[a] > target && target >= 0 {
			break
		}
		if a > 0 && nums[a] == nums[a-1] {
			continue
		}
		for b := a + 1; b < sz; b++ {
            if nums[a]+nums[b] > target && target >= 0 {
				break
			}
			if b > a+1 && nums[b] == nums[b-1] {
				continue
			}
			c := b + 1
			d := sz - 1
			for c < d {
				sum := nums[a] + nums[b] + nums[c] + nums[d]
				if sum < target {
					c++
				} else if sum > target {
					d--
				} else {
					ans = append(ans, []int{nums[a], nums[b], nums[c], nums[d]})
					for c < d && nums[c] == nums[c+1] {
						c++
					}
					for c < d && nums[d] == nums[d-1] {
						d--
					}
					c++
					d--
				}
			}
		}
	}
	return ans
}