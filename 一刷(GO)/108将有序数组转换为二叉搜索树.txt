/**
 * Definition for a binary tree node.
 * type TreeNode struct {
 *     Val int
 *     Left *TreeNode
 *     Right *TreeNode
 * }
 */
func sortedArrayToBST(nums []int) *TreeNode {
    var traversal func(nums []int, left, right int) *TreeNode
    traversal = func(nums []int, left, right int) *TreeNode {
        if left >= right {
            return nil
        }
        mid := left + (right - left) >> 1
        node := &TreeNode{nums[mid], nil, nil}
        node.Left = traversal(nums, left, mid)
        node.Right = traversal(nums, mid + 1, right)
        return node
    }
    return traversal(nums, 0, len(nums))
}