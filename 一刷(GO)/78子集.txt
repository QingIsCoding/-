func subsets(nums []int) [][]int {
    var ans [][]int
    var path []int
    var backtracking func(nums []int, startIndex int)
    backtracking = func(nums []int, startIndex int) {
        temp := make([]int, len(path))
        copy(temp, path)
        ans = append(ans, temp)
        for i := startIndex; i < len(nums); i++ {
            path = append(path, nums[i])
            backtracking(nums, i + 1)
            path = path[:len(path)-1]
        }
    }
    backtracking(nums, 0)
    return ans
}