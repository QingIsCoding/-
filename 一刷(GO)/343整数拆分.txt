func integerBreak(n int) int {
    dp := make([]int, n + 1)
    dp[2] = 1
    for i := 3; i <= n; i++ {
        //1.拆成两个正整数j和i-j时
        //偶数i=6最多拆成3和3: 1+5,2+4,3+3 相当于 4+2,5+1
        //奇数i=7最多拆成3和4: 1+6,2+5,3+4 相当于 4+3,5+2,6+1
        //最多把i/2拆出来即可
        for j := 1; j <= i / 2; j++ {
            //拆成三个及以上正整数时，已拆成j和i-j，再拆i-j即dp[i-j]
            //没有必要拆j的原因：
            //比如i=9: 1+8,2+7,3+6,4+5
            //1+8:1不能拆
            //2+7:拆2成1+1  1+1+7(除去拆出来的1)1+7在1+8的dp[8](拆8)中出现过
            //3+6:拆3成1+2  1+2+6(除去拆出来的1)2+6在1+8的dp[8](拆8)中出现过
            //              2+1+6(除去拆出来的2)1+6在2+7的dp[7](拆7)中出现过
            dp[i] = max(dp[i], max(j * (i - j), j * dp[i-j]))
        }
    }
    return dp[n]
}