func findTargetSumWays(nums []int, target int) int {
    sum := 0
    for _, num := range nums {
        sum += num
    }
    abs := func(a int) int {
        if a >= 0 {
            return a
        } else {
            return -a
        }
    }
    if abs(target) > sum || (sum + target) & 1 == 1 {
        return 0
    }
    pos := (sum + target) >> 1
    dp := make([]int, pos + 1)
    dp[0] = 1
    for i := 0; i < len(nums); i++ {
        for j := pos; j >= nums[i]; j-- {
            //dp[i][j]=dp[i−1][j]+dp[i−1][j−nums[i]] j≥nums[i]
            dp[j] += dp[j-nums[i]]
        }
    }
    return dp[pos]
}