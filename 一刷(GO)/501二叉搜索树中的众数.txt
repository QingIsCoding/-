/**
 * Definition for a binary tree node.
 * type TreeNode struct {
 *     Val int
 *     Left *TreeNode
 *     Right *TreeNode
 * }
 */
func findMode(root *TreeNode) []int {
    ans := make([]int, 0)
    count, maxCount := 0, 0
    var pre *TreeNode
    var traversal func(cur *TreeNode)
    traversal = func(cur *TreeNode) {
        if cur == nil {
            return
        }
        traversal(cur.Left)
        if pre == nil {
            count = 1
        } else if cur.Val == pre.Val {
            count++
        } else {
            count = 1
        }
        if count == maxCount {
            ans = append(ans, cur.Val)
        } else if count > maxCount {
            ans = []int{cur.Val}
            maxCount = count
        }
        pre = cur
        traversal(cur.Right)
    }
    traversal(root)
    return ans
}